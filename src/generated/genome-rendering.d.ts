// @generated by protobuf-ts 2.9.1 with parameter output_javascript
// @generated from protobuf file "genome-rendering.proto" (package "kromosynthrendering", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message kromosynthrendering.RenderRequest
 */
export interface RenderRequest {
    /**
     * @generated from protobuf field: string genomeStringUrl = 1;
     */
    genomeStringUrl: string;
    /**
     * @generated from protobuf field: float duration = 2;
     */
    duration: number;
    /**
     * @generated from protobuf field: float noteDelta = 3;
     */
    noteDelta: number;
    /**
     * @generated from protobuf field: float velocity = 4;
     */
    velocity: number;
    /**
     * @generated from protobuf field: bool reverse = 5;
     */
    reverse: boolean;
    /**
     * @generated from protobuf field: bool useOvertoneInharmonicityFactors = 6;
     */
    useOvertoneInharmonicityFactors: boolean;
}
/**
 * @generated from protobuf message kromosynthrendering.RenderResponse
 */
export interface RenderResponse {
    /**
     * @generated from protobuf field: bytes audio = 1;
     */
    audio: Uint8Array;
}
declare class RenderRequest$Type extends MessageType<RenderRequest> {
    constructor();
    create(value?: PartialMessage<RenderRequest>): RenderRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RenderRequest): RenderRequest;
    internalBinaryWrite(message: RenderRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message kromosynthrendering.RenderRequest
 */
export declare const RenderRequest: RenderRequest$Type;
declare class RenderResponse$Type extends MessageType<RenderResponse> {
    constructor();
    create(value?: PartialMessage<RenderResponse>): RenderResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RenderResponse): RenderResponse;
    internalBinaryWrite(message: RenderResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message kromosynthrendering.RenderResponse
 */
export declare const RenderResponse: RenderResponse$Type;
/**
 * @generated ServiceType for protobuf service kromosynthrendering.KromosynthRendering
 */
export declare const KromosynthRendering: any;
export {};
